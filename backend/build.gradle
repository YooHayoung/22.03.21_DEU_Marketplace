buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'com.deu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone'}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // mysql
    implementation 'mysql:mysql-connector-java'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    implementation 'org.apache.httpcomponents:httpcore:4.4.13'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    implementation 'commons-logging:commons-logging:1.2'

    //
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    //

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement { imports { mavenBom 'org.springframework.cloud:spring-cloud-aws:2.2.1.RELEASE' } }


tasks.named('test') {
    useJUnitPlatform()
}

// querydsl --
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
//    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

// 자동 생성된 Q클래스를 gradle clean으로 제거한다.
// IntelliJ IDEA로 빌드하는 옵션을 선택하면 src/main/generated 아래에 파일이 생성되고 필요한 경우 Q 파일을 직접 삭제해야 한다. 아래 스크립트는 gradle clean 명령어를 실행하면 src/main/generated 아래에 있는 파일을 함께 삭제해준다.
clean {
    delete file('src/main/generated')
}
// -- querydsl